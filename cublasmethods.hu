#ifndef __CUBLAS_METHODS_H__
#define __CUBLAS_METHODS_H__

#include <cublas_v2.h>
#include "cudamethods.hu"

#define CUBLAS_ERR_CHECK(ret) \
{ \
  const cublasStatus_t error = ret; \
  if (error != CUBLAS_STATUS_SUCCESS) { \
    printf("cublas error! %s:%d\n", __FILE__, __LINE__); \
    printf("#%d: no cublas error strings.\n", error); \
    exit(EXIT_FAILURE); \
  } \
} \

__global__ void naive_softmax_cross_entropy(float *in, int size, float *out);
__global__ void naive_sum(float *in, int size, float *out);
CudaMatrix *getMatrixSum(CudaMatrix *input);

typedef struct _Dense_Info
{
  CudaMatrix *input_matrix, *output_matrix;
  CudaMatrix *weights, *biases;
} DenseInfo;

DenseInfo *setupDenseInfo(CudaMatrix *input, int output_size);
void forwardDense(DenseInfo *dense, cublasHandle_t handle);


#endif
